function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "calc"};
	this.sidHashMap["calc"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "calc:20"};
	this.sidHashMap["calc:20"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "calc:19"};
	this.sidHashMap["calc:19"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/Input"] = {sid: "calc:24"};
	this.sidHashMap["calc:24"] = {rtwname: "<Root>/Input"};
	this.rtwnameHashMap["<Root>/Input1"] = {sid: "calc:25"};
	this.sidHashMap["calc:25"] = {rtwname: "<Root>/Input1"};
	this.rtwnameHashMap["<Root>/Input2"] = {sid: "calc:26"};
	this.sidHashMap["calc:26"] = {rtwname: "<Root>/Input2"};
	this.rtwnameHashMap["<Root>/Add"] = {sid: "calc:4"};
	this.sidHashMap["calc:4"] = {rtwname: "<Root>/Add"};
	this.rtwnameHashMap["<Root>/Decrement Real World"] = {sid: "calc:20"};
	this.sidHashMap["calc:20"] = {rtwname: "<Root>/Decrement Real World"};
	this.rtwnameHashMap["<Root>/Divide"] = {sid: "calc:8"};
	this.sidHashMap["calc:8"] = {rtwname: "<Root>/Divide"};
	this.rtwnameHashMap["<Root>/Increment Real World"] = {sid: "calc:19"};
	this.sidHashMap["calc:19"] = {rtwname: "<Root>/Increment Real World"};
	this.rtwnameHashMap["<Root>/Product"] = {sid: "calc:14"};
	this.sidHashMap["calc:14"] = {rtwname: "<Root>/Product"};
	this.rtwnameHashMap["<Root>/Subtract"] = {sid: "calc:5"};
	this.sidHashMap["calc:5"] = {rtwname: "<Root>/Subtract"};
	this.rtwnameHashMap["<Root>/Unary Minus"] = {sid: "calc:18"};
	this.sidHashMap["calc:18"] = {rtwname: "<Root>/Unary Minus"};
	this.rtwnameHashMap["<Root>/Output"] = {sid: "calc:27"};
	this.sidHashMap["calc:27"] = {rtwname: "<Root>/Output"};
	this.rtwnameHashMap["<Root>/Output1"] = {sid: "calc:28"};
	this.sidHashMap["calc:28"] = {rtwname: "<Root>/Output1"};
	this.rtwnameHashMap["<Root>/Output2"] = {sid: "calc:29"};
	this.sidHashMap["calc:29"] = {rtwname: "<Root>/Output2"};
	this.rtwnameHashMap["<Root>/Output3"] = {sid: "calc:30"};
	this.sidHashMap["calc:30"] = {rtwname: "<Root>/Output3"};
	this.rtwnameHashMap["<Root>/Output4"] = {sid: "calc:31"};
	this.sidHashMap["calc:31"] = {rtwname: "<Root>/Output4"};
	this.rtwnameHashMap["<Root>/Output5"] = {sid: "calc:32"};
	this.sidHashMap["calc:32"] = {rtwname: "<Root>/Output5"};
	this.rtwnameHashMap["<Root>/Output6"] = {sid: "calc:33"};
	this.sidHashMap["calc:33"] = {rtwname: "<Root>/Output6"};
	this.rtwnameHashMap["<S1>/u"] = {sid: "calc:20:1"};
	this.sidHashMap["calc:20:1"] = {rtwname: "<S1>/u"};
	this.rtwnameHashMap["<S1>/FixPt Constant"] = {sid: "calc:20:2"};
	this.sidHashMap["calc:20:2"] = {rtwname: "<S1>/FixPt Constant"};
	this.rtwnameHashMap["<S1>/FixPt Data Type Duplicate"] = {sid: "calc:20:3"};
	this.sidHashMap["calc:20:3"] = {rtwname: "<S1>/FixPt Data Type Duplicate"};
	this.rtwnameHashMap["<S1>/FixPt Sum1"] = {sid: "calc:20:4"};
	this.sidHashMap["calc:20:4"] = {rtwname: "<S1>/FixPt Sum1"};
	this.rtwnameHashMap["<S1>/y"] = {sid: "calc:20:5"};
	this.sidHashMap["calc:20:5"] = {rtwname: "<S1>/y"};
	this.rtwnameHashMap["<S2>/u"] = {sid: "calc:19:1"};
	this.sidHashMap["calc:19:1"] = {rtwname: "<S2>/u"};
	this.rtwnameHashMap["<S2>/FixPt Constant"] = {sid: "calc:19:2"};
	this.sidHashMap["calc:19:2"] = {rtwname: "<S2>/FixPt Constant"};
	this.rtwnameHashMap["<S2>/FixPt Data Type Duplicate"] = {sid: "calc:19:3"};
	this.sidHashMap["calc:19:3"] = {rtwname: "<S2>/FixPt Data Type Duplicate"};
	this.rtwnameHashMap["<S2>/FixPt Sum1"] = {sid: "calc:19:4"};
	this.sidHashMap["calc:19:4"] = {rtwname: "<S2>/FixPt Sum1"};
	this.rtwnameHashMap["<S2>/y"] = {sid: "calc:19:5"};
	this.sidHashMap["calc:19:5"] = {rtwname: "<S2>/y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
